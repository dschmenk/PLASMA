include "inc/cmdsys.plh"
include "inc/args.plh"
include "inc/fileio.plh"
include "inc/sndseq.plh"

//
// These are utility sequences/routines needed to test the music sequencer code.
//
word arg, pcm, len
byte ref

byte sinewave[]
byte = $80, $83, $86, $89, $8C, $8F, $92, $95, $98, $9C, $9F, $A2, $A5, $A8, $AB, $AE
byte = $B0, $B3, $B6, $B9, $BC, $BF, $C1, $C4, $C7, $C9, $CC, $CE, $D1, $D3, $D5, $D8
byte = $DA, $DC, $DE, $E0, $E2, $E4, $E6, $E8, $EA, $EC, $ED, $EF, $F0, $F2, $F3, $F5
byte = $F6, $F7, $F8, $F9, $FA, $FB, $FC, $FC, $FD, $FE, $FE, $FF, $FF, $FF, $FF, $FF
byte = $FF, $FF, $FF, $FF, $FF, $FF, $FE, $FE, $FD, $FC, $FC, $FB, $FA, $F9, $F8, $F7
byte = $F6, $F5, $F3, $F2, $F0, $EF, $ED, $EC, $EA, $E8, $E6, $E4, $E2, $E0, $DE, $DC
byte = $DA, $D8, $D5, $D3, $D1, $CE, $CC, $C9, $C7, $C4, $C1, $BF, $BC, $B9, $B6, $B3
byte = $B0, $AE, $AB, $A8, $A5, $A2, $9F, $9C, $98, $95, $92, $8F, $8C, $89, $86, $83
byte = $80, $7C, $79, $76, $73, $70, $6D, $6A, $67, $63, $60, $5D, $5A, $57, $54, $51
byte = $4F, $4C, $49, $46, $43, $40, $3E, $3B, $38, $36, $33, $31, $2E, $2C, $2A, $27
byte = $25, $23, $21, $1F, $1D, $1B, $19, $17, $15, $13, $12, $10, $0F, $0D, $0C, $0A
byte = $09, $08, $07, $06, $05, $04, $03, $03, $02, $01, $01, $00, $00, $00, $00, $00
byte = $00, $00, $00, $00, $00, $00, $01, $01, $02, $03, $03, $04, $05, $06, $07, $08
byte = $09, $0A, $0C, $0D, $0F, $10, $12, $13, $15, $17, $19, $1B, $1D, $1F, $21, $23
byte = $25, $27, $2A, $2C, $2E, $31, $33, $36, $38, $3B, $3E, $40, $43, $46, $49, $4C
byte = $4F, $51, $54, $57, $5A, $5D, $60, $63, $67, $6A, $6D, $70, $73, $76, $79, $7C

def wavtopcm4(samples, rep, len)#0
    var i

    rep = (rep - 1) << 4
    for i = 0 to len-1
        samples->[i] = rep | (samples->[i] >> 4)
    next
end

arg = argNext(argFirst)
if ^arg
    ref = fileio:open(arg)
    if ref
        pcm = heapmark
        len = fileio:read(ref, pcm, heapavail)
        fileio:close(ref)
        heapalloc(len)
        if pcm[0] == 'R' and pcm[1] == 'I' and pcm[2] == 'F'
            pcm = pcm + 44
            len = len - 44
            wavtopcm4(pcm, 1, len)
        fin
        pcmPlay(pcm, len / 256)#0
    fin
else
    wavtopcm4(@sinewave, 16, 256)
    memcpy(heapmark, @sinewave, 256)
    memcpy(heapmark + 256, @sinewave, 256)
    memcpy(heapmark + 512, @sinewave, 256)
    memcpy(heapmark + 768, @sinewave, 256)
    memcpy(heapmark + 1024, heapmark, 1024)
     while ^$C000 < 128
        pcmPlay(heapmark, 8)#0
    loop
    getc
    memset(heapmark, $FFF0, 1024)
    while ^$C000 < 128
        pcmPlay(heapmark, 4)#0
    loop
    getc
    memset(heapmark, $F8F8, 1024)
    while ^$C000 < 128
        pcmPlay(heapmark, 4)#0
    loop
    getc
fin
done
